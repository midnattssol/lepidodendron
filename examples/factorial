.code
    load r0, 5
    load r1, 1234 ; Arbitrary value just to check that r1 is not affected

    store sp, @post-call
    add sp, 1

    load pc, @factorial

    @post-call

    load pc, -1 ; Exit

    ; Functions assume that the last item pushed onto the stack is the return address.

    @factorial ; [r0 -- r0]
    ; Push r1 and start the accumulator at 1
    store sp, r1
    add sp, 1
    load r1, 1

    @factorial-loop
        ; while x != 0:
        cmp r0, 0
        triteq fl, 0
        tritmul fl, 1

        loadnz r0, 0
        loadnz pc, @factorial-exit

        ; r1 *= r0, r0 -= 1
        mul r1, r0
        add r0, -1
        load pc, @factorial-loop

    @factorial-exit

    ; Set r0 from the accumulator and pop the previous accumulator value
    load r0, r1

    load r1, *--sp ; pop r1
    load pc, *--sp ; return
